[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flappy-neural"
version = "0.1.0"
description = "Flappy Bird implementado com rede neural e algoritmo genÃ©tico"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "KauanHK", email = "kauankaestner@gmail.com" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Games/Entertainment",
]
dependencies = [
    "numpy>=2.2.0",
    "pygame>=2.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=4.1.0",
]

[tool.setuptools]
packages = ["src"]
include-package-data = true

[tool.setuptools.package-data]
"src" = ["assets/*"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "*.pyd", "__pycache__/*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "neural: tests for neural network and genetic algorithm components",
    "game: tests for game mechanics",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "pygame.*"
ignore_missing_imports = true

[project.scripts]
flappy-neural = "src.main:main"